Разработчик: Федоров Михаил Евгеньевич, ФИТКБ, 2 курс, группа бИВТ, номер 223, подгруппа 3
Наставник: Сокольников Виктор Владимирович

Данная программа представляет собой удобный инструмент для записи, выписки пациентов

Принцип работы программы:
	- при запуске программы входные данные (Excel-документ) добавляются в двусвязный список (class patientLinkedList);
	- пользователь добавляет, удаляет пациентов в списке (окна addPatient, delPatient);
	- при нажатии на кнопку "Отобразить список в файле" Excel документ очищается и данные из списка заносятся в соответствующие ячейки Excel документа, 
		после чего открывается документ;
	- при выходе из программы данные из списка сохраняются в Excel, подобно предыдущему пункту;
	- если пользователь вносит изменения в Excel-документ, данные игнорируются. Список организовывается в начале работы программы.

Методы программного кода:
	- переходы между формами (.ui) осуществляются при помощи команды "connect". При нажатии на определенные кнопки создаются приватные сигналы, вызывающие определенные
		методы классов форм. Например, при нажатии на кнопку "Показать список пациентов", генерируется условный сигнал "stSignal" и скрывается меню; затем программа
		передает работу методу "stSlot" класса "patientLinkedList", в котором отображается созданная таблица согласно входным данным;
	- предполагается, что Excel-документ всегда корректен: ФИО - буквы; дата рождения - дд.мм.гггг; вес - целочисленное значение от 2 до 350кг с округлением до десятых
		и не содержит спец-символов, букв; рост от 45 до 250 сантиметров и не содержит спец-символов, букв;
	- добавление и удаление пациента контроллируется при помощи регулярных выражений (QRegExp) каждая строка проверяется на корректность выше перечисленных условий. При наличии ошибки
		QMessageBox укажет на поле, в котором находится недопустимое значение;
	

Обратите внимание:
	- считывание файла Excel осуществляется при помощи "Component object model". Входные данные принадлежат классу "QVariant", а значит при занесении данных в двусвязный
		список (Конструктор(QString, QString, QString, QString, int, float) требуется конвертация. Первые три значения конструктора класса - строки, конвертация 
		осуществляется при помощи встроенного метода класса "QVariant" value.toString(). Четвертое значение конструктора - значение даты в виде строки (дд.мм.гггг),
		сырые данные приходят в виде даты от класса QVariant (QVariant(QDateTime, QDateTime(2004-10-15 00:00:00.000 RTZ 2 (зима) Qt::LocalTime)). Для конвертации 
		необходимо создать переменную типа QDate и присвоить ей значение value.toDate(), затем при помощи встроенных методов класса QDate (.year(), .month(), .day())
		создать строку (strDate = QString::number(date.day()) + "." + QString::number(date.month()) + "." + QString::number(date.year());) - необходимый формат 
		даты рождения. Вес и рост передаются конструктору при помощи встроенных методов класса QVariant (.toInt(), .toFloat());
	- создание таблицы "QTableWidget" происходит при помощи двусвязного списка. Изначально задаем оглавление таблицы при помощи конструктора QStringList, а затем
		при получении элемента вставляем новые строки, записываем в них данные посредством элементов "QTableWidgetItem" и созданных методов "patientLinkedList";
	- регулярное выражение создается подобным образом: QRegExp rx("thisIsRegularExpression"), наличие регулярного выражения в строке контроллируется командой:
		rx.indexIn(yourString), метод возвращает начальную позицию схожего элемента, в противном случае -1.
	- при записи измененного списка в Excel идет форматирование оглавления, табличек с данными и выравнивание всего текста

		

